{"version":3,"sources":["components/Displayuser.tsx","Redux/hooks.ts","components/enquiry.tsx","components/TransferData.tsx","Redux/indexmodal.ts","Redux/Users.ts","Redux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Displayuser","data","deleteItem","editItems","userIndex","console","log","userId","className","userName","userEmail","userAge","onClick","to","pathname","state","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","SubmitButton","withStyles","root","boxShadow","textTransform","fontSize","color","padding","position","border","marginTop","lineHeight","backgroundColor","borderColor","margin","display","fontWeight","fontFamily","join","Button","UpdateButton","useStyles","makeStyles","theme","createStyles","sub","spacing","Enquiry","classes","createUser","store","users","removeUser","updateUser","useState","name","setName","email","setEmail","age","setAge","toggleButton","setToggleButton","iseditItems","setIsEditItem","userdata","items","onSubmits","map","Number","Math","random","toString","slice","window","localStorage","setItem","JSON","stringify","alert","inputEventName","event","target","value","userid","items_card_search_id","find","val","id","a","confirm","onSubmit","preventDefault","type","placeholder","onChange","autoFocus","endIcon","CloudCircleRounded","variant","Icon","key","TransferData","userfethedid","useLocation","model","action","payload","push","filter","user","findIndex","createStore","persist","clear","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAkCeA,EAvBK,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAEhD,OACI,qCAGSC,QAAQC,IAAIF,EAAUH,EAAKM,QAAQ,UACpC,sBAAKC,UAAU,WAAf,UACI,6BAAMP,EAAKQ,WACX,6BAAMR,EAAKS,YACX,6BAAMT,EAAKU,UACX,gCAAK,mBAAGH,UAAU,cAAcI,QAAS,WAAQT,EAAUF,EAAKM,WAC5D,mBAAGC,UAAU,mBAAmBI,QAAS,WAAQV,EAAWD,EAAKM,OAAQN,EAAKQ,aAClF,eAAC,IAAD,CAAMI,GAAI,CAAEC,SAAU,eAAgBC,MAAO,CAACR,OAAQN,EAAKM,SAA3D,UACI,mBAAGC,UAAU,kCADjB,YAN2BP,EAAKM,Y,wDCf9CS,EAAaC,cAINC,EAAkBF,EAAWE,gBAE7BC,GADmBH,EAAWI,iBACdJ,EAAWG,eCKlCE,EAAeC,YAAW,CAC5BC,KAAM,CACFC,UAAW,OACXC,cAAe,OACfC,SAAU,GACVC,MAAO,UACPC,QAAS,WACTC,SAAU,WACVC,OAAQ,YACRC,UAAW,OACXC,WAAY,IACZC,gBAAiB,OACjBC,YAAa,UACbC,OAAQ,SACRC,QAAS,OACTC,WAAY,OACZC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,KACP,UAAW,CACPN,gBAAiB,UACjBC,YAAa,UACbP,MAAO,UACPH,UAAW,QAEf,WAAY,CACRA,UAAW,OACXS,gBAAiB,UACjBC,YAAa,WAEjB,UAAW,CACPV,UAAW,yCAxCFF,CA2ClBkB,KAEGC,EAAenB,YAAW,CAC5BC,KAAM,CACFC,UAAW,OACXC,cAAe,OACfC,SAAU,GACVC,MAAO,UACPC,QAAS,WACTE,OAAQ,YACRC,UAAW,OACXC,WAAY,IACZC,gBAAiB,OACjBC,YAAa,UACbG,WAAY,OACZC,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFC,KAAK,KACP,UAAW,CACPN,gBAAiB,UACjBC,YAAa,UACbP,MAAO,UACPH,UAAW,QAEf,WAAY,CACRA,UAAW,OACXS,gBAAiB,UACjBC,YAAa,WAEjB,UAAW,CACPV,UAAW,yCArCFF,CAwClBkB,KAEGE,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,IAAK,CACD,QAAS,CACLX,OAAQS,EAAMG,QAAQ,UAmIvBC,EA5HK,WAEhB,IAAMC,EAAUP,IAEVQ,EAAahC,GAAgB,SAACiC,GAAD,OAAWA,EAAMC,MAAMF,cACpDG,EAAanC,GAAgB,SAACiC,GAAD,OAAWA,EAAMC,MAAMC,cACpDC,EAAapC,GAAgB,SAACiC,GAAD,OAAWA,EAAMC,MAAME,cAE1D,EAAwBC,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsBJ,qBAAtB,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAqCR,mBAAsB,IAA3D,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAW/C,GAAc,SAACgC,GAAD,OAAWA,EAAMC,MAAMe,SAEhDC,EAAY,WACRZ,GAAWE,GAAYE,EAEjBE,GACRI,EAASG,KAAI,SAACjE,GACV,OAAIA,EAAUG,SAAWyD,EACdd,EAAW,CAAE3C,OAAQ+D,OAAOC,KAAKC,SAASC,WAAWC,MAAM,EAAG,KAAMjE,SAAU+C,EAAM9C,UAAWgD,EAAO/C,QAAS2D,OAAOV,KAE1HxD,KAEXC,QAAQC,IAAI0D,GACZV,EAAWU,GACXD,GAAgB,KAEhBb,EAAW,CAAE3C,OAAQ+D,OAAOC,KAAKC,SAASC,WAAWC,MAAM,EAAG,KAAMjE,SAAU+C,EAAM9C,UAAWgD,EAAO/C,QAAS2D,OAAOV,KACtHe,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUb,IACpDT,EAAQ,IACRE,EAAS,IACTE,EAAO,KAhBPmB,MAAM,yBAuBRC,EAAiB,SAACC,GACM,SAAtBA,EAAMC,OAAO3B,KACbC,EAAQyB,EAAMC,OAAOC,OACQ,UAAtBF,EAAMC,OAAO3B,KACpBG,EAASuB,EAAMC,OAAOC,OAEtBvB,EAAOS,OAAOY,EAAMC,OAAOC,SAS7BjF,EAAY,SAACkF,GACf,IAAMC,EAA4BpB,EAASqB,MAAK,SAACC,GAC7C,OAAOA,EAAIjF,SAAW8E,KAE1B5B,EAAO,OAAC6B,QAAD,IAACA,OAAD,EAACA,EAAsB7E,UAC9BkD,EAAQ,OAAC2B,QAAD,IAACA,OAAD,EAACA,EAAsB5E,WAC/BmD,EAAM,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAsB3E,SAC7BsD,EAAc,CAAExD,SAAU+C,EAAM9C,UAAWgD,EAAO/C,QAASiD,IAC3DG,GAAgB,IAKd7D,EAAU,uCAAG,WAAOuF,EAAYjC,GAAnB,SAAAkC,EAAA,yDACKf,OAAOgB,QAAP,gCAAwCF,EAAxC,oBAAsDjC,EAAtD,0BADL,iDAIfH,EAAWoC,GAJI,2CAAH,wDAOVrF,EAAS,uCAAG,WAAOiF,GAAP,eAAAK,EAAA,6DACRJ,EAA4BpB,EAASqB,MAAK,SAACC,GAC7C,OAAOA,EAAIjF,SAAW8E,KAFZ,kBAIPhF,QAAQC,IAAIgF,EAAqB/E,OAAQ,iBAJlC,2CAAH,sDAUf,OACI,mCACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAMA,UAAU,cAAcoF,SAxC5B,SAACV,GACnBA,EAAMW,kBAuCU,SAEI,kCACI,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBX,MAAO5B,EAAMA,KAAK,OAAOwC,SAAUf,EAAgBgB,WAAS,IAAG,uBAEhH,uBAAOH,KAAK,OAAOC,YAAY,QAAQX,MAAO1B,EAAOF,KAAK,QAAQwC,SAAUf,EAAgBgB,WAAS,IAAG,uBAExG,uBAAOH,KAAK,SAASC,YAAY,MAAMX,MAAOxB,EAAKJ,KAAK,MAAMwC,SAAUf,EAAgBgB,WAAS,IAAG,uBACnGnC,EAAe,cAACrB,EAAD,CAAcjC,UAAWyC,EAAQH,IAAKoD,QAAS,cAACC,EAAA,EAAD,IAAwBvF,QAASwD,EAAhF,qBAAqH,cAAC/C,EAAD,CAAc+E,QAAQ,YAAY5F,UAAWyC,EAAQH,IAAKnB,MAAM,YAAYuE,QAAS,cAACG,EAAA,EAAD,mBAAmBzF,QAASwD,EAAjH,2BAOjJ,qBAAM5D,UAAU,YAAhB,SACK0D,EAASG,KAAI,SAACpE,EAAWqG,GACtB,OACI,mCACI,cAAC,EAAD,CAAuBrG,KAAMA,EAAMC,WAAYA,EAAYC,UAAWA,EAAWC,UAAWA,GAA1EkG,kB,OC9LvCC,EA3BM,WACjB,IAAMrC,EAAW/C,GAAc,SAACJ,GAC5B,OAAOA,EAAMqC,MAAMe,SAGjBqC,EADWC,cACkB1F,MACnC,OACI,mCACI,qBAAKP,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SAEK0D,EAASG,KAAI,SAACpE,EAAWqG,GACvB,OACA,yCAAKE,EAAajG,SAAWN,EAAKM,OAAS,qCAC3C,wCAAqBN,EAAKQ,WAAjB6F,GACT,yCAAsBrG,EAAKS,YAAlB4F,GACT,uCAAsBrG,EAAKU,UAAlB2F,EAAI,GAH8B,OAIxC,kBCXXI,EAJW,CACxBtD,MCCwB,CACtBe,MAAO,GACPjB,WAAYyD,aAAO,SAAC5F,EAAO6F,GACzB7F,EAAMoD,MAAM0C,KAAKD,MAEnBvD,WAAYsD,aAAO,SAAC5F,EAAO6F,GACzB7F,EAAMoD,MAAQpD,EAAMoD,MAAM2C,QAAO,SAACC,GAAD,OAAUA,EAAKxG,SAAWqG,QAE7DtD,WAAYqD,aAAO,SAAC5F,EAAO6F,GACzB7F,EAAMoD,MAAM6C,WAAU,SAACD,GAAW,OAAOA,EAAKxG,OAASqG,EAAQrG,eCf/D4C,EAAQ8D,YAAYC,YAAQR,IAElCvD,EAAM+D,QAAQC,QAEChE,QCoBAiE,EAfC,WACd,OACE,mCACE,cAAC,IAAD,CAAejE,MAAOA,EAAtB,SACE,cAAC,IAAD,CAAekE,SAAS,wBAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxE,IACjC,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,eAAeC,UAAWjB,cCLzCkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2bc951e1.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\nimport Idata from './interfaces';\r\n\r\ninterface Props {\r\n    data: Idata;\r\n    deleteItem(uniqueid: number, userName: string): void;\r\n    editItems(uniqueid: number): void;\r\n    userIndex(uniqueid: number): void;\r\n}\r\n\r\nconst Displayuser = ({ data, deleteItem, editItems, userIndex }: Props) => {\r\n\r\n    return (\r\n        <>\r\n        \r\n            \r\n                {console.log(userIndex(data.userId)+\" hello\")}\r\n                <div className=\"eachItem\" key={data.userId}>\r\n                    <h3 >{data.userName}</h3>\r\n                    <h3 >{data.userEmail}</h3>\r\n                    <h3 >{data.userAge}</h3>\r\n                    <div><i className=\"fas fa-edit\" onClick={() => { editItems(data.userId); }}></i>\r\n                        <i className=\"fas fa-trash-alt\" onClick={() => { deleteItem(data.userId, data.userName); }}></i>\r\n                    <Link to={{ pathname: '/information', state: {userId: data.userId}}}>\r\n                        <i className=\"fas fa-arrow-alt-circle-right\" ></i> </Link ></div >\r\n\r\n                </div >\r\n           \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Displayuser;","import { createTypedHooks } from \"easy-peasy\";\r\nimport { StoreModel } from \"./indexmodal\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;","import React, { useState, FC, ChangeEvent } from 'react'\r\nimport \"./style.css\";\r\nimport Displayuser from './Displayuser';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    makeStyles,\r\n    Theme,\r\n} from '@material-ui/core/styles';\r\nimport { Button, Icon } from '@material-ui/core';\r\nimport { CloudCircleRounded } from '@material-ui/icons';\r\nimport { useStoreActions, useStoreState } from '../Redux/hooks';\r\nimport Idata from './interfaces';\r\n\r\nconst SubmitButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        color: '#21618C',\r\n        padding: '6px 12px',\r\n        position: 'relative',\r\n        border: '1px solid',\r\n        marginTop: '20px',\r\n        lineHeight: 1.5,\r\n        backgroundColor: '#fff',\r\n        borderColor: '#0063cc',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        fontWeight: 'bold',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#21618C',\r\n            borderColor: '#21618C',\r\n            color: '#F4F6F7',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F4D03F',\r\n            borderColor: '#21618C',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(247, 249, 249,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\nconst UpdateButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        color: '#C0392B',\r\n        padding: '6px 12px',\r\n        border: '1px solid',\r\n        marginTop: '20px',\r\n        lineHeight: 1.5,\r\n        backgroundColor: '#fff',\r\n        borderColor: '#0063cc',\r\n        fontWeight: 'bold',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#C0392B',\r\n            borderColor: '#21618C',\r\n            color: '#F4F6F7',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F4D03F',\r\n            borderColor: '#21618C',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(247, 249, 249,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        sub: {\r\n            '& > *': {\r\n                margin: theme.spacing(0),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst Enquiry: FC = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const createUser = useStoreActions((store) => store.users.createUser);\r\n    const removeUser = useStoreActions((store) => store.users.removeUser);\r\n    const updateUser = useStoreActions((store) => store.users.updateUser);\r\n\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [age, setAge] = useState<number | string>();\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n    const [iseditItems, setIsEditItem] = useState<Idata | any>([]);\r\n\r\n    const userdata = useStoreState((store) => store.users.items);\r\n\r\n    const onSubmits = (): void => {\r\n        if ((!name) || (!email) || (!age)) {\r\n            alert(\"Please fill the data\")\r\n        } else if ((toggleButton)) {\r\n            userdata.map((userIndex) => {\r\n                if (userIndex.userId === iseditItems) {\r\n                    return createUser({ userId: Number(Math.random().toString().slice(2, 11)), userName: name, userEmail: email, userAge: Number(age) })\r\n                }\r\n                return userIndex;\r\n            });\r\n            console.log(iseditItems)\r\n            updateUser(iseditItems)\r\n            setToggleButton(false);\r\n        } else {\r\n            createUser({ userId: Number(Math.random().toString().slice(2, 11)), userName: name, userEmail: email, userAge: Number(age) });\r\n            window.localStorage.setItem('users', JSON.stringify(userdata));\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setAge(\"\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const inputEventName = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        if (event.target.name === \"name\") {\r\n            setName(event.target.value)\r\n        } else if (event.target.name === \"email\") {\r\n            setEmail(event.target.value)\r\n        } else {\r\n            setAge(Number(event.target.value))\r\n        }\r\n    };\r\n\r\n    const preventReload = (event: React.MouseEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    // edit the current data card\r\n    const editItems = (userid: number) => {\r\n        const items_card_search_id: any = userdata.find((val) => {\r\n            return val.userId === userid;\r\n        });\r\n        setName(items_card_search_id?.userName);\r\n        setEmail(items_card_search_id?.userEmail);\r\n        setAge(items_card_search_id?.userAge);\r\n        setIsEditItem({ userName: name, userEmail: email, userAge: age });\r\n        setToggleButton(true);\r\n\r\n    }\r\n\r\n    // delete Item in card\r\n    const deleteItem = async (id: number, name: string) => {\r\n        const isConfirmed = window.confirm(`Deleting a User \\nid: ${id} \\nName: ${name} \\ncan't be restored?`);\r\n        if (!isConfirmed) return;\r\n\r\n        removeUser(id);\r\n    }\r\n\r\n    const userIndex = async (userid: number) => {\r\n        const items_card_search_id: any = userdata.find((val) => {\r\n            return val.userId === userid;\r\n        });\r\n        return console.log(items_card_search_id.userId, \"i am working\");\r\n\r\n    }\r\n\r\n\r\n    //redering the JSX and displaying the core results\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"htmlform\">\r\n                    <div className=\"addItems\">\r\n                        <form className=\"additemform\" onSubmit={preventReload}>\r\n\r\n                            <label>\r\n                                <input type=\"text\" placeholder=\"enter your name\" value={name} name=\"name\" onChange={inputEventName} autoFocus /><br />\r\n\r\n                                <input type=\"text\" placeholder=\"email\" value={email} name=\"email\" onChange={inputEventName} autoFocus /><br />\r\n\r\n                                <input type=\"number\" placeholder=\"age\" value={age} name=\"age\" onChange={inputEventName} autoFocus /><br />\r\n                                {toggleButton ? <UpdateButton className={classes.sub} endIcon={<CloudCircleRounded />} onClick={onSubmits} > Update</UpdateButton> : <SubmitButton variant=\"contained\" className={classes.sub} color=\"secondary\" endIcon={<Icon>send</Icon>} onClick={onSubmits} >Submit</SubmitButton>}\r\n                            </label>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {/* show our item */}\r\n\r\n                    < div className=\"showItems\" >\r\n                        {userdata.map((data: any, key: number) => {\r\n                            return (\r\n                                <>\r\n                                    <Displayuser key={key} data={data} deleteItem={deleteItem} editItems={editItems} userIndex={userIndex} />\r\n\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </div >\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enquiry","\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useStoreState } from '../Redux/hooks';\r\nimport './style.css'\r\n\r\nconst TransferData = () => {\r\n    const userdata = useStoreState((state) => {\r\n        return state.users.items\r\n    });\r\n    const location = useLocation()\r\n    const userfethedid: any = location.state\r\n    return (\r\n        <>\r\n            <div className=\"showItems\" >\r\n                <div className='eachItem'>\r\n\r\n                    {userdata.map((data: any, key: number) => {\r\n                       return (\r\n                       <> { userfethedid.userId === data.userId ? <>\r\n                       <h1 key={key}>Name: {data.userName}</h1> \r\n                       <h1 key={key}>Email: {data.userEmail}</h1> \r\n                       <h1 key={key+1}>Age: {data.userAge}</h1> </>\r\n                       :  null\r\n                        }\r\n                    </>)})}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransferData\r\n","  \r\nimport users, { UsersModel } from './Users';\r\n\r\nexport interface StoreModel {\r\n  users: UsersModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  users\r\n};\r\n\r\nexport default model;","import {action, Action} from 'easy-peasy'\r\nimport Idata from '../components/interfaces'\r\nexport interface UsersModel {\r\n    items: Idata[];\r\n    createUser: Action<UsersModel, Idata>;\r\n    removeUser: Action<UsersModel, number>;\r\n    updateUser: Action<UsersModel, Idata>;\r\n}\r\n  \r\nconst users: UsersModel = {\r\n    items: [],\r\n    createUser: action((state, payload) => {\r\n      state.items.push(payload);\r\n    }),\r\n    removeUser: action((state, payload) => {\r\n      state.items = state.items.filter((user) => user.userId !== payload);\r\n    }),\r\n    updateUser: action((state, payload) => {\r\n      state.items.findIndex((user) => { return user.userId = payload.userId\r\n      });\r\n      \r\n      \r\n      \r\n    }),\r\n  };\r\n\r\nexport default users;","import { createStore, persist } from 'easy-peasy';\r\nimport model from './indexmodal';\r\n\r\nconst store = createStore(persist(model));\r\n\r\nstore.persist.clear();\r\n\r\nexport default store;","import React, { FC } from 'react'\r\nimport Enquiry from './components/enquiry';\r\nimport TransferData from './components/TransferData';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n//import { store } from \"./Redux/store\";\r\n// import { Provider } from \"react-redux\";\r\nimport { StoreProvider } from 'easy-peasy'\r\nimport store from './Redux/store'\r\n\r\n\r\n\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <>\r\n      <StoreProvider store={store}>\r\n        <BrowserRouter basename=\"/userinfo-typescript/\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Enquiry}></Route>\r\n            <Route exact path=\"/information\" component={TransferData} ></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </StoreProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}