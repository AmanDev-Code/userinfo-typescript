{"version":3,"sources":["components/Displayuser.tsx","Redux/hooks.ts","components/enquiry.tsx","components/TransferData.tsx","Redux/indexmodal.ts","Redux/Users.ts","Redux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Displayuser","data","deleteItem","editItems","className","userName","userEmail","userAge","onClick","userId","Number","to","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","SubmitButton","withStyles","root","boxShadow","textTransform","fontSize","color","padding","position","border","marginTop","lineHeight","backgroundColor","borderColor","margin","display","fontWeight","fontFamily","join","Button","UpdateButton","useStyles","makeStyles","theme","createStyles","sub","spacing","Enquiry","classes","createUser","store","users","removeUser","updateUser","useState","Id","setId","name","setName","email","setEmail","age","setAge","toggleButton","setToggleButton","iseditItems","setIsEditItem","userdata","items","inputEventName","event","target","value","userid","items_card_search_id","find","val","String","console","log","id","a","window","confirm","onSubmit","preventDefault","Math","random","toString","slice","alert","type","placeholder","onChange","autoFocus","endIcon","CloudCircleRounded","variant","Icon","map","key","TransferData","useParams","userdetails","state","userDetails","setUserInfo","model","action","payload","push","filter","user","userUpdateIndex","findIndex","undefined","userDetailsOnFind","createStore","persist","clear","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3abcae8.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\nimport Idata from './interfaces';\r\n\r\ninterface Props {\r\n    data: Idata;\r\n    deleteItem(uniqueid: number | string, userName: string): void;\r\n    editItems(uniqueid: String): void;\r\n    \r\n}\r\n\r\nconst Displayuser = ({ data, deleteItem, editItems }: Props) => {\r\n\r\n    return (\r\n        <>\r\n        \r\n                <div className=\"eachItem\" key={Number(data.userId)}>\r\n                    <h3 >{data.userName}</h3>\r\n                    <h3 >{data.userEmail}</h3>\r\n                    <h3 >{data.userAge}</h3>\r\n                    <div><i className=\"fas fa-edit\" onClick={() => { editItems(data.userId); }}></i>\r\n                        <i className=\"fas fa-trash-alt\" onClick={() => { deleteItem(Number(data.userId), data.userName); }}></i>\r\n                    <Link to={'/information/'+data.userId}>\r\n                        <i className=\"fas fa-arrow-alt-circle-right\" ></i> </Link ></div >\r\n\r\n                </div >\r\n           \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Displayuser;","import { createTypedHooks } from \"easy-peasy\";\r\nimport { StoreModel } from \"./indexmodal\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;","import React, { useState, FC, ChangeEvent, useEffect } from 'react'\r\nimport \"./style.css\";\r\nimport Displayuser from './Displayuser';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    makeStyles,\r\n    Theme,\r\n} from '@material-ui/core/styles';\r\nimport { Button, Icon } from '@material-ui/core';\r\nimport { CloudCircleRounded } from '@material-ui/icons';\r\nimport { useStoreActions, useStoreState } from '../Redux/hooks';\r\nimport Idata from './interfaces';\r\n\r\nconst SubmitButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        color: '#21618C',\r\n        padding: '6px 12px',\r\n        position: 'relative',\r\n        border: '1px solid',\r\n        marginTop: '20px',\r\n        lineHeight: 1.5,\r\n        backgroundColor: '#fff',\r\n        borderColor: '#0063cc',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        fontWeight: 'bold',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#21618C',\r\n            borderColor: '#21618C',\r\n            color: '#F4F6F7',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F4D03F',\r\n            borderColor: '#21618C',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(247, 249, 249,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\nconst UpdateButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n        color: '#C0392B',\r\n        padding: '6px 12px',\r\n        border: '1px solid',\r\n        marginTop: '20px',\r\n        lineHeight: 1.5,\r\n        backgroundColor: '#fff',\r\n        borderColor: '#0063cc',\r\n        fontWeight: 'bold',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#C0392B',\r\n            borderColor: '#21618C',\r\n            color: '#F4F6F7',\r\n            boxShadow: 'none',\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F4D03F',\r\n            borderColor: '#21618C',\r\n        },\r\n        '&:focus': {\r\n            boxShadow: '0 0 0 0.2rem rgba(247, 249, 249,.5)',\r\n        },\r\n    },\r\n})(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        sub: {\r\n            '& > *': {\r\n                margin: theme.spacing(0),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst Enquiry: FC = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const createUser = useStoreActions((store) => store.users.createUser);\r\n    const removeUser = useStoreActions((store) => store.users.removeUser);\r\n    const updateUser = useStoreActions((store) => store.users.updateUser);\r\n\r\n    const [Id, setId] = useState<String>(\"\");\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [age, setAge] = useState<number | string>(0);\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n    const [iseditItems, setIsEditItem] = useState<Idata | any>([]);\r\n\r\n    const userdata = useStoreState((store) => store.users.items);\r\n\r\n   \r\n\r\n\r\n    const inputEventName = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        if (event.target.name === \"name\") {\r\n            setName(event.target.value)\r\n        } else if (event.target.name === \"email\") {\r\n            setEmail(event.target.value)\r\n        } else {\r\n            setAge(Number(event.target.value))\r\n        }\r\n    };\r\n\r\n\r\n    // edit the current data card\r\n    const editItems = (userid: String) => {\r\n        const items_card_search_id: any = userdata.find((val) => {\r\n\r\n            if (val.userId === userid) {\r\n                setId(userid)\r\n                setIsEditItem(String(Id))\r\n                console.log(iseditItems)\r\n                setToggleButton(true);\r\n                return val;\r\n                \r\n            }\r\n            return null\r\n        });\r\n        setIsEditItem(items_card_search_id.userId)\r\n        console.log(items_card_search_id)\r\n        console.log(iseditItems)\r\n        setName(items_card_search_id?.userName);\r\n        setEmail(items_card_search_id?.userEmail);\r\n        setAge(items_card_search_id?.userAge);\r\n        \r\n        \r\n    }\r\n\r\n\r\n    // delete Item in card\r\n    const deleteItem = async (id: number, name: string) => {\r\n        const isConfirmed = window.confirm(`Deleting a User \\nid: ${id} \\nName: ${name} \\ncan't be restored?`);\r\n        if (!isConfirmed) return;\r\n        removeUser(String(id));\r\n    }\r\n\r\n    const onSubmits = (event: React.MouseEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if ((!name) || (!email) || (!age)) {\r\n            alert(\"Please fill the data\")\r\n        } else if ((name) && (email) && (age) && (toggleButton)) {\r\n            console.log(iseditItems)\r\n            updateUser({ userId: iseditItems, userName: name, userEmail: email, userAge: Number(age) })\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setAge(\"\");\r\n            setToggleButton(false);\r\n        } else {\r\n            createUser({ userId: String(Number(Math.random().toString().slice(2, 11))), userName: name, userEmail: email, userAge: Number(age) });\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setAge(\"\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //redering the JSX and displaying the core results\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"htmlform\">\r\n                    <div className=\"addItems\">\r\n                        <form className=\"additemform\" onSubmit={onSubmits}>\r\n\r\n                            <label>\r\n                                <input type=\"text\" placeholder=\"enter your name\" value={name} name=\"name\" onChange={inputEventName} autoFocus /><br />\r\n\r\n                                <input type=\"text\" placeholder=\"email\" value={email} name=\"email\" onChange={inputEventName} autoFocus /><br />\r\n\r\n                                <input type=\"number\" placeholder=\"age\" value={age} name=\"age\" onChange={inputEventName} autoFocus /><br />\r\n                                {toggleButton ? <UpdateButton type=\"submit\" className={classes.sub} endIcon={<CloudCircleRounded />}> Update</UpdateButton> : <SubmitButton type=\"submit\" variant=\"contained\" className={classes.sub} color=\"secondary\" endIcon={<Icon>send</Icon>}>Submit</SubmitButton>}\r\n                            </label>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {/* show our item */}\r\n\r\n                    < div className=\"showItems\" >\r\n                        {userdata.map((data: any, key: number) => {\r\n                            return (\r\n                                <>\r\n                                    <Displayuser key={key} data={data} deleteItem={deleteItem} editItems={editItems} />\r\n\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </div >\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enquiry","\r\nimport { useParams } from 'react-router-dom';\r\nimport { useStoreActions, useStoreState } from '../Redux/hooks';\r\nimport './style.css'\r\n\r\nconst TransferData = () => {\r\n    const userId: any = useParams();\r\n    const userdetails = useStoreState((state) => {\r\n        return state.users.userDetails\r\n    });\r\n    const setUserInfo = useStoreActions((store) => store.users.setUserInfo);\r\n    setUserInfo(userId);\r\n    return (\r\n        <>\r\n            <div className=\"showItems\" >\r\n                <div className='eachItem'>\r\n                    <h1>Name: {userdetails.userName}</h1>\r\n                    <h1>Email: {userdetails.userEmail}</h1>\r\n                    <h1>Age: {userdetails.userAge}</h1>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransferData\r\n","  \r\nimport users, { UsersModel } from './Users';\r\n\r\nexport interface StoreModel {\r\n  users: UsersModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  users\r\n};\r\n\r\nexport default model;","import { action, Action } from 'easy-peasy'\r\nimport Idata from '../components/interfaces'\r\nexport interface UsersModel {\r\n  items: Idata[];\r\n  userDetails: Idata;\r\n  createUser: Action<UsersModel, Idata>;\r\n  setUserInfo: Action<UsersModel, Idata>;\r\n  removeUser: Action<UsersModel, number | string>;\r\n  updateUser: Action<UsersModel, Idata>;\r\n}\r\n\r\nconst users: UsersModel = {\r\n  items: [],\r\n  userDetails: {\r\n    userId: '',\r\n    userName: '',\r\n    userEmail: '',\r\n    userAge: 0\r\n\r\n  },\r\n  createUser: action((state, payload) => {\r\n    state.items.push(payload);\r\n  }),\r\n  removeUser: action((state, payload) => {\r\n    state.items = state.items.filter((user) => user.userId !== payload);\r\n  }),\r\n  updateUser: action((state, payload) => {\r\n    const userUpdateIndex = state.items.findIndex((user) => {\r\n      return user.userId === payload.userId\r\n    });\r\n      if(userUpdateIndex !== undefined){\r\n        state.items[userUpdateIndex].userName = payload.userName\r\n        state.items[userUpdateIndex].userEmail = payload.userEmail\r\n        state.items[userUpdateIndex].userAge = payload.userAge\r\n      }\r\n  }),\r\n  setUserInfo: action((state, payload) => {\r\n    const userDetailsOnFind = state.items.find(val => val.userId === payload.userId);\r\n    if(userDetailsOnFind?.userId === payload.userId)\r\n    {\r\n      state.userDetails.userId = userDetailsOnFind.userId\r\n      state.userDetails.userName = userDetailsOnFind.userName;\r\n      state.userDetails.userEmail = userDetailsOnFind.userEmail;\r\n      state.userDetails.userAge = userDetailsOnFind.userAge;\r\n    }\r\n  }),\r\n};\r\n\r\nexport default users;","import { createStore, persist } from 'easy-peasy';\r\nimport model from './indexmodal';\r\n\r\nconst store = createStore(persist(model));\r\n\r\nstore.persist.clear();\r\n\r\nexport default store;","import React, { FC } from 'react'\r\nimport Enquiry from './components/enquiry';\r\nimport TransferData from './components/TransferData';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n//import { store } from \"./Redux/store\";\r\n// import { Provider } from \"react-redux\";\r\nimport { StoreProvider } from 'easy-peasy'\r\nimport store from './Redux/store'\r\n\r\n\r\n\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <>\r\n      <StoreProvider store={store}>\r\n        <BrowserRouter basename=\"/userinfo-typescript/\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Enquiry}></Route>\r\n            <Route exact path=\"/information/:userId\" component={TransferData} ></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </StoreProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}